exit
continue
more_time
next
continue
hobbies
continue
where("admin = (?) AND name != (?)", true, "Yoda").count
where("admin = (?) AND name != (?)", true, "Yoda")
continue
User.where("admin = (?) AND name != (?)", true, "Yoda").count
User.where("admin = (?) AND name != (?)", true, "Yoda")
User.where(admin: true)
User.select_droids
User.all.select_droids
User.select_droids
continue
@droids.count
@droids
exit
self.conversation.recipient
self.conversation.sender
self
message
User.find(2)
self
self.conversation_recipient.is_droid?
self.conversation.sender.is_droid?
self.conversation.sender
self.sender
self.conversation_recipient.is_droid?
!self.conversation.sender.is_droid?
continue
!self.conversation.sender.is_droid?
self.conversation_recipient.is_droid?
exit
conversation.id
droid_responder_id
gather_droid_response
exit
continue
self
exit
Message.create!(message_params)
message_params
data
continue
self.valid?
self
continue
self.conversation
self
continue
    Message.create(body: gather_droid_response, user_id: droid_responder_id, conversation_id: conversation.id)
gather_droid_response
self.gather_droid_response
self.conversation.id
droid_responder_id
self.conversation.recipient.random_droid_response.strip
self.conversation.recipient.random_droid_response
self.conversation.recipient
self
continue
self
gather_droid_response
Message.create(body: gather_droid_response, user_id: droid_responder_id, conversation_id: message_conversation.id)
continue
quote.slice(rand(quote.size), rand(quote.size) +1)
quote.slice(rand(quote.size), rand(s.size) +1)
quote = self.conversation.recipient.quote
self.conversation.recipient.quote.slice(rand(quote.size), rand(quote.size) + 1)
self.conversation.recipient.quote.slice(rand(s.size), rand(s.size) + 1)
self.conversation.recipient[rand(quote.length), rand(quote.length - 1) + 1]
self.conversation.recipient.quote[rand(quote.length), rand(quote.length - 1) + 1]
self.conversation.recipient.quote[rand(s.length), rand(s.length - 1) + 1]
self.conversation.recipient.quote
self.conversation.recipient.name != "Yoda"
name != "Yoda"
self.conversation.recipient.admin?
self.conversation.recipient
continue
self.persisted?
conversation.persisted?
    Message.create(body: @yoda.quote, user_id: @yoda.id, conversation_id: conversation.id)
conversation = Conversation.create(recipient_id: self.id, sender_id:  @yoda.id)
continue
    message.save
    message = conversation.messages.create(body: @yoda.quote, user_id: @yoda.id, conversation_id: conversation.id)
conversation.save
conversation = Conversation.create(recipient_id: self.id, sender_id:  @yoda.id)
continue
self.conversations.first.messages.first
self.conversations.first.message.first
    conversation.messages.create(body: @yoda.quote, user_id: @yoda.id, conversation_id: conversation.id)
self.conversations.first
self.conversations.last
Conversation.last
conversation = Conversation.create(recipient_id: self.id, sender_id:  @yoda.id)
continue
quote
self
exit
next
User.find_yoda
self.find_yoda
find_yoda
self
continue
exit
continue
user.strip.name.downcase
user.name.downcase
user.downcase
user
continue
user
continue
user
continue
user
exit
user
continue
user
continue
user
exit
continue
current_user
continue
@conversation.nil?
@conversation.id unless @conversation.nil?
@conversation
@conversation.id
@users
